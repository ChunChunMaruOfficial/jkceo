.hideelement {
    animation: hideelement 1s ease-in-out forwards;
}

div.hideelement {
    animation-delay: .5s
}

h2.hideelement {
    animation-delay: .8s
}

.parent {
    display: flex;
    flex-direction: column;
    width: fit-content;
    justify-content: center;
    align-items: center;
    gap: 70px;
    margin: auto;

    >h1:not(.hideelement) {
        animation: elementshowing 1s ease-in-out forwards;
    }


    .maingroup {
        display: flex;
        flex-direction: row;
        width: 50%;
        height: min-content;
        gap: 50px;

        &:not(.hideelement) {
            transform: translateX(-250%);
            animation: elementshowing 1s ease-in-out forwards .3s;

        }

        .inputgroup {
            position: relative;
            margin-bottom: 30px;
            width: 60%;
        }

        .inputfield {
            width: 100%;
            padding: 15px;
            font-size: 24px;
            border: 2px solid var(--soft-orange);
            border-radius: 4px;
            outline: none;
            transition: border-color 0.3s;
        }

        .inputlabel {
            position: absolute;
            left: 15px;
            top: 15px;
            font-size: 24px;
            color: var(--strong-orange);
            transition: all 0.3s ease;
            pointer-events: none;
            background-color: transparent;
        }

        .inputfield:focus {
            border-color: var(--strong-green);
        }

        .inputfield:focus+.inputlabel,
        .inputfield:not(:placeholder-shown)+.inputlabel {
            top: -10px;
            left: 10px;
            font-size: 12px;
            color: var(--strong-green);
            background-color: var(--body-color);
            padding: 0 5px;
        }

        .inputgroup::after {
            content: attr(data-hint);
            position: absolute;
            left: 2px;
            bottom: -18px;
            font-size: 12px;
            color: #888;
            opacity: 0;
            transform: translateY(-5px);
            transition: all 0.2s ease;
        }

        .inputgroup:focus-within::after {
            opacity: 1;
            transform: translateY(0);
        }

        >div:last-of-type {
            height: -webkit-fill-available;
            display: flex;
            flex-direction: row;
            gap: 15px;

            .isLoading {
                animation: loading .5s ease infinite;
            }

            button {
                border: 2px solid var(--soft-orange);
                border-radius: 4px;
                background-color: var(--body-color);
                height: -webkit-fill-available;
                padding: 8px;

                >img {
                    height: 3em;
                }
            }
        }
    }

    >h2 {
        width: 75%;
        text-align: center;


        &:not(.hideelement) {
            transform: translateX(-200%);
            animation: elementshowing 1s ease-in-out forwards .85s;

        }

    }
}

@keyframes loading {
    from {
        transform: rotate(0deg)
    }

    to {
        transform: rotate(360deg);
    }
}

@keyframes elementshowing {
    from {
        transform: translateX(-250%);
    }

    to {
        transform: translateX(0);
    }
}

@keyframes hideelement {
    from {
        transform: translateX(0);
    }

    to {
        transform: translateX(250%);
    }
}